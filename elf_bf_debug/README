BUILD
You will need to build eglibc from scratch in order to use this tool.  setup.sh
should do all the work for you, just go ahead and run it.

Building eglibc requies ~800Mb of free space.

You must enable source URIs in apt's sources.list for setup.sh to work properly.

RUNNING

run debug_rtld_exec.sh <path to executable> to debug the runtime loader as it
runs that executable.  It also loads a set of tools that can be used to inspect
a Brainfuck stack.  We recommend running debug_rtld_exec.sh from the elf_bf_debug
directory.


The following commands are available

elfbf setup <path to debug info>
   -This must always be run before any other debugging comand, the debug info file is generated from elf_bf_compiler (the debuf info file is written into the second to last argument when executing elf_bf_compiler)

elfbf tape
   -prints the entire tape

elfbf tape_range <low> <high>
   -prints the values on the tape between indices <low> and <high>

elfbf tape_value
   -prints the value the tape pointer is pointing to

elfbf tape_value_relative <index>
   -prints the value on the tape that is <index> hops away from where the tape pointer is pointing

elfbf tape_index
   -prints the current index in which the tape pointer is ponting

elfbf source
   -prints the bringfuck source

elfbf current_ins
   -prints the intruction and index of instruction that is currently being processed

elfbf go_to_next_ins:
   -processes relocation entries until it reaches entries for the next instruction

elfbf go_to_next_rel:
   -finishes processing the current relocation entry/begins processing the next

elfbf rel_num
   -prints the index of the relocation entry currently being processed

NOTE:
- debug_rtld_exec-rand.sh is the same as debug_rtld_exec.sh execpt it enables ASLR
