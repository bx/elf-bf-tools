This is the README for the elf_bf_compiler directory.


This directory contains source code for the brainfuck to ELF metadata
compiler. The README in the parent directory contains build instructions.

_Getting Started_
-compile_demo.sh
compile_demo.sh will help you get started with the bf to ELF metadata compiler.
1. Be sure ../demo/demo has been build
2. Create a file containing brainfuck source. We will assume you called it test.bf
3. Run ./compile_demo.sh test.bf
4. Now ./demo contains the crafted metadata to execute the instructions in test.bf

-compile_demo_gdb.sh is the same as compile_demo.sh except it invokes the compiler inside gdb for debugging.

_More advanced BF Compilation_
-elf_bf_compiler
Once you build elf_bf_compiler you will allow you to compile brainfuck source into arbitrary executables.

USAGE:
<path to input executable> <where to write output executable> <path to brainfuck source file> <offset of &end to _dl_auxv>  <where to write debugging information> <tape length>
   ./elf_bf_compiler <path to input executable> <where to write output executable> <path to brainfuck source> <tape length (# symbols)> <optional: [file to write debugger info to] [offset of ifunc that returns 0 from ld.so base]  [offset of _dl_auxv from ld.so base] [offset of &end from _dl_auxv]>
   - the defaults offsets consistently work with our setup, you may need to tweak them to get them working with your libraries.
   - if any offset is provided, all offsets must be provided
   - <offset of &end to _dl_auxv>: &end - _dl_auxv, you can find &end and _dl_auxv by running a binary in gdb using elf_bf_debug/debug_rtld_exec.sh.  Once it starts running, it will break at do-rel.h:117.  At this point you can print &end. If you go up in the call stack 3 times (via the up command), you will be at dl-sysdep.c:244.  At this point you can print _dl_auxv.  Please note that the offset of &end from _dl_auxv may be different when a binary is being run outside of gdb.  If this is a case, metadata that implements branches may cause a segfault and you can inspect the coredump with gdb to get the values of &end and _dl_auxv for binaries running outside gdb.
  - Our brainfuck implementation supports one extra instruction: X
     - X is the exit instruction.  Make it the last instruction in your brainfuck source code to ensure the executable's original metadata is processed so that the executable hosting the compiled brainfuck code can cleanly execute.
NOTES:
- if elf_bf_compiler expects its executable will be run in a debugger (if debug config name is specified), it needs to set things up differently (the stack layout differs)
- elf_bf_compiler assumes that your executable uses the same basic set of libraries as demo. There is no way for a user to easily adjust this yet.



"FUTURE WORK":
- allow the user to configure the compiler to work with a binary that uses more libraries than ../demo/demo uses
- let the compiler figure out the number of libraries that will be loaded for the executable on the fly so everything works automatically
- (maybe) write debugger scripts that automatically determine the offsets we need